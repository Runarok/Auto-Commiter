name: Push 100 Empty Commits  # Name of the workflow

on:
  push:
    branches:
      - main  # Trigger on pushes to the 'main' branch.
  
  schedule:
    - cron: "0 0 1 1 *"  # This runs every hour.

  workflow_dispatch:  # This allows the workflow to be manually triggered.

jobs:
  push_100_empty_commits:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner.

    steps:
      # Step 1: Checkout the repository to make changes.
      - name: Checkout repository
        uses: actions/checkout@v3  # Checkout the repository.
        with:
          persist-credentials: false  # Avoid storing credentials permanently.
          fetch-depth: 0  # Fetch the full history to avoid issues with git operations.

      # Step 2: Configure Git identity
      - name: Configure Git identity
        run: |
          git config --global user.email "RunarokHrafn@gmail.com"  # Set commit email.
          git config --global user.name "Runarok"  # Set commit author name.

      # Step 3: Pull the latest changes from the remote repository to avoid reference lock.
      - name: Pull latest changes
        run: git pull origin main  # Pull the latest changes from the 'main' branch.

      # Step 4: Create Empty.Readme file and commit 100 times
      - name: Create Empty.Readme and commit 100 times
        run: |
          # Create an empty README file.
          touch Empty.Readme
          
          # Loop to make 100 empty commits with commit number in the file.
          for i in {1..100}; do
            echo "Commit number: $i" >> Empty.Readme  # Append commit number to file.
            git add Empty.Readme  # Stage the file for commit.
            git commit -m "Empty commit #$i"  # Commit with a unique message.
          done

      # Step 5: Delete the Empty.Readme file after committing.
      - name: Delete Empty.Readme
        run: |
          rm -f Empty.Readme  # Delete the Empty.Readme file.
          git add -A  # Stage changes (file deletion).
          git commit -m "Delete Empty.Readme after 100 commits"  # Commit file deletion.

      # Step 6: Pull the latest changes again to ensure no reference lock issues before pushing.
      - name: Pull latest changes before push
        run: git pull origin main  # Pull again to ensure there are no conflicts or locks.

      # Step 7: Push the commits to the remote repository.
      - name: Push changes to remote
        uses: ad-m/github-push-action@master  # Use GitHub Push Action to push changes.
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token to authenticate the push.
